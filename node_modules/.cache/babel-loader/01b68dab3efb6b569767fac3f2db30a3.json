{"remainingRequest":"C:\\Users\\windows\\Project\\toutiaomobile\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\windows\\Project\\toutiaomobile\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\windows\\Project\\toutiaomobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\windows\\Project\\toutiaomobile\\src\\views\\article\\components\\comment-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\windows\\Project\\toutiaomobile\\src\\views\\article\\components\\comment-list.vue","mtime":1614926515059},{"path":"C:\\Users\\windows\\Project\\toutiaomobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\Project\\toutiaomobile\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\windows\\Project\\toutiaomobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\windows\\Project\\toutiaomobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiQzovVXNlcnMvd2luZG93cy9Qcm9qZWN0L3RvdXRpYW9tb2JpbGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvd2luZG93cy9Qcm9qZWN0L3RvdXRpYW9tb2JpbGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLyDov5nph4zlj6/ku6Xlr7zlhaXlhbbku5bmlofku7bvvIjmr5TlpoLvvJrnu4Tku7bvvIzlt6Xlhbdqc++8jOesrOS4ieaWueaPkuS7tmpz77yManNvbuaWh+S7tu+8jOWbvueJh+aWh+S7tuetieetie+8iQppbXBvcnQgeyBnZXRDb21tZW50cyB9IGZyb20gJ0AvYXBpL2NvbW1lbnQuanMnOwppbXBvcnQgQ29tbWVudHNJdGVtIGZyb20gJy4vY29tbWVudHMtaXRlbS52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NvbW1lbnRMaXN0JywKICBjb21wb25lbnRzOiB7CiAgICBDb21tZW50c0l0ZW06IENvbW1lbnRzSXRlbQogIH0sCiAgLy8g5a6a5LmJ5bGe5oCnCiAgbW9kZWw6IHt9LAogIHByb3BzOiB7CiAgICBzb3VyY2U6IHsKICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nLCBPYmplY3RdLAogICAgICByZXF1aXJlOiB0cnVlCiAgICB9LAogICAgbGlzdDogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9LAogICAgdHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIC8vIOiHquWumuS5ieaVsOaNrumqjOivgQogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWx1ZSkgewogICAgICAgIHJldHVybiBbJ2EnLCAnYyddLmluY2x1ZGVzKHZhbHVlKTsKICAgICAgfSwKICAgICAgZGVmYXVsdDogJ2EnCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gbGlzdDogW10sCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBmaW5pc2hlZDogZmFsc2UsCiAgICAgIHJlZnJlc2hpbmc6IGZhbHNlLAogICAgICBvZmZzZXQ6IG51bGwsCiAgICAgIC8vIOiOt+WPluS4i+S4gOasoeivt+axgueahOaXtumXtOaIswogICAgICBsaW1pdDogMTAgLy8g5q+P5qyh6I635Y+W55qE5pWw5o2uCgogICAgfTsKICB9LAogIC8vIOiuoeeul+WxnuaAp++8jOS8muebkeWQrOS+nei1luWxnuaAp+WAvOmaj+S5i+WPmOWMlgogIGNvbXB1dGVkOiB7fSwKICAvLyDnm5HmjqdkYXRh5Lit55qE5pWw5o2u5Y+Y5YyWCiAgd2F0Y2g6IHt9LAogIC8vIOaWueazlembhuWQiAogIG1ldGhvZHM6IHsKICAgIG9uTG9hZDogZnVuY3Rpb24gb25Mb2FkKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3RoaXMkbGlzdCwgX3lpZWxkJGdldENvbW1lbnRzLCBkYXRhLCByZXN1bHRzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGdldENvbW1lbnRzKHsKICAgICAgICAgICAgICAgICAgdHlwZTogX3RoaXMudHlwZSwKICAgICAgICAgICAgICAgICAgc291cmNlOiBfdGhpcy5zb3VyY2UudG9TdHJpbmcoKSwKICAgICAgICAgICAgICAgICAgb2Zmc2V0OiBfdGhpcy5vZmZzZXQsCiAgICAgICAgICAgICAgICAgIGxpbWl0OiBfdGhpcy5saW1pdAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF95aWVsZCRnZXRDb21tZW50cyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJGdldENvbW1lbnRzLmRhdGE7CiAgICAgICAgICAgICAgICByZXN1bHRzID0gZGF0YS5kYXRhLnJlc3VsdHM7CgogICAgICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ29ubG9hZC1zdWNjZXNzJywgZGF0YS5kYXRhKTsKCiAgICAgICAgICAgICAgICAoX3RoaXMkbGlzdCA9IF90aGlzLmxpc3QpLnB1c2guYXBwbHkoX3RoaXMkbGlzdCwgX3RvQ29uc3VtYWJsZUFycmF5KHJlc3VsdHMpKTsKCiAgICAgICAgICAgICAgICBpZiAocmVzdWx0cy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMub2Zmc2V0ID0gZGF0YS5kYXRhLmxhc3RfaWQ7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBfdGhpcy5maW5pc2hlZCA9IHRydWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMubGlzdCk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CgogICAgICAgICAgICAgICAgX3RoaXMudG9hc3QoewogICAgICAgICAgICAgICAgICBtZXNzYWdlOiAn6I635Y+W6K+E6K665YiX6KGo5aSx6LSlIScsCiAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCAxMl1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICAvLyDnlJ/lkb3lkajmnJ8gLSDliJvlu7rlrozmiJDvvIjlj6/ku6Xorr/pl67lvZPliY10aGlz5a6e5L6L77yJCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICB0aGlzLm9uTG9hZCgpOwogIH0sCiAgLy8g55Sf5ZG95ZGo5pyfIC0g5oyC6L295a6M5oiQ77yI5Y+v5Lul6K6/6ZeuRE9N5YWD57Sg77yJCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LAogIGJlZm9yZUNyZWF0ZTogZnVuY3Rpb24gYmVmb3JlQ3JlYXRlKCkge30sCiAgLy8g55Sf5ZG95ZGo5pyfIC0g5Yib5bu65LmL5YmNCiAgYmVmb3JlTW91bnQ6IGZ1bmN0aW9uIGJlZm9yZU1vdW50KCkge30sCiAgLy8g55Sf5ZG95ZGo5pyfIC0g5oyC6L295LmL5YmNCiAgYmVmb3JlVXBkYXRlOiBmdW5jdGlvbiBiZWZvcmVVcGRhdGUoKSB7fSwKICAvLyDnlJ/lkb3lkajmnJ8gLSDmm7TmlrDkuYvliY0KICB1cGRhdGVkOiBmdW5jdGlvbiB1cGRhdGVkKCkge30sCiAgLy8g55Sf5ZG95ZGo5pyfIC0g5pu05paw5LmL5ZCOCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHt9LAogIC8vIOeUn+WRveWRqOacnyAtIOmUgOavgeS5i+WJjQogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkge30sCiAgLy8g55Sf5ZG95ZGo5pyfIC0g6ZSA5q+B5a6M5oiQCiAgYWN0aXZhdGVkOiBmdW5jdGlvbiBhY3RpdmF0ZWQoKSB7fSAvLyDlpoLmnpzpobXpnaLmnIlrZWVwLWFsaXZl57yT5a2Y5Yqf6IO977yM6L+Z5Liq5Ye95pWw5Lya6Kem5Y+RCgp9Ow=="},{"version":3,"sources":["comment-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <van-list v-model=\"loading\" :finished=\"finished\" finished-text=\"没有更多了\" @load=\"onLoad\" :immediate-check=\"false\">\r\n    <CommentsItem v-for=\"(item, index) in list\" :key=\"index\" :title=\"item.content\" :comment=\"item\" @update-is_liking=\"item.is_liking = $event\" @replay-click=\"$emit('replay-click', $event)\"/>\r\n  </van-list>\r\n</template>\r\n\r\n<script>\r\n// 这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\r\nimport { getComments } from '@/api/comment.js'\r\nimport CommentsItem from './comments-item.vue'\r\nexport default {\r\n  name: 'CommentList',\r\n  components: {\r\n    CommentsItem\r\n  },\r\n  // 定义属性\r\n  model: {},\r\n  props: {\r\n    source: {\r\n      type: [Number, String, Object],\r\n      require: true\r\n    },\r\n    list: {\r\n      type: Array,\r\n      default: function () {\r\n        return []\r\n      }\r\n    },\r\n    type: {\r\n      type: String,\r\n      // 自定义数据验证\r\n      validator (value) {\r\n        return ['a', 'c'].includes(value)\r\n      },\r\n      default: 'a'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      // list: [],\r\n      loading: false,\r\n      finished: false,\r\n      refreshing: false,\r\n      offset: null, // 获取下一次请求的时间戳\r\n      limit: 10 // 每次获取的数据\r\n    }\r\n  },\r\n  // 计算属性，会监听依赖属性值随之变化\r\n  computed: {},\r\n  // 监控data中的数据变化\r\n  watch: {},\r\n  // 方法集合\r\n  methods: {\r\n    async onLoad () {\r\n      /*\r\n       * 1.请求获取数据\r\n       * 2.将数据添加到列表中\r\n       * 3.将loading设置为false\r\n       * 4.判断是否含有数据\r\n       * 5.如果还有数据，就请求下一页数据\r\n       * 6.没有数据就将finished设置为true\r\n      */\r\n      try {\r\n        const { data } = await getComments({\r\n          type: this.type,\r\n          source: this.source.toString(),\r\n          offset: this.offset,\r\n          limit: this.limit\r\n        })\r\n        const { results } = data.data\r\n        this.$emit('onload-success', data.data)\r\n        this.list.push(...results)\r\n        if (results.length) {\r\n          this.offset = data.data.last_id\r\n        } else {\r\n          this.finished = true\r\n        }\r\n        console.log(this.list)\r\n      } catch (error) {\r\n        this.toast({ message: '获取评论列表失败!', duration: 500 })\r\n      }\r\n    }\r\n  },\r\n  // 生命周期 - 创建完成（可以访问当前this实例）\r\n  created () {\r\n    this.loading = true\r\n    this.onLoad()\r\n  },\r\n  // 生命周期 - 挂载完成（可以访问DOM元素）\r\n  mounted () {},\r\n  beforeCreate () {}, // 生命周期 - 创建之前\r\n  beforeMount () {}, // 生命周期 - 挂载之前\r\n  beforeUpdate () {}, // 生命周期 - 更新之前\r\n  updated () {}, // 生命周期 - 更新之后\r\n  beforeDestroy () {}, // 生命周期 - 销毁之前\r\n  destroyed () {}, // 生命周期 - 销毁完成\r\n  activated () {} // 如果页面有keep-alive缓存功能，这个函数会触发\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n</style>\r\n"],"sourceRoot":"src/views/article/components"}]}